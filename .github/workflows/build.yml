# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write

jobs:
  build:
    #runs-on: [self-hosted]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        
    - name: Git Version
      id: version
      uses: codacy/git-version@2.7.1
      with:
        release-branch: master
        dev-branch: develop
        
    - name: Use the version
      run: |
        echo "VERSION=${{ steps.version.outputs.version }}"
        echo "PREVIOUS_VERSION=${{ steps.version.outputs.previous-version }}"
        echo "VERSION=${{ steps.version.outputs.version }}" >> $GITHUB_ENV
        git tag ${{ steps.version.outputs.version }}
        git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git" ${{ steps.version.outputs.version }}
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${VERSION}
      
    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --filter 'FullyQualifiedName!~IntegrationTests' --no-build --verbosity normal
      
#    - name: Publish
#      run: dotnet publish --configuration Release /p:Version=${VERSION} --no-build --verbosity normal -o ./publish
      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        file: ./build/Dockerfile
